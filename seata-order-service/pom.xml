<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
<!--    <parent>-->
<!--        <groupId>org.springframework.boot</groupId>-->
<!--        <artifactId>spring-boot-starter-parent</artifactId>-->
<!--        <version>2.6.4</version>-->
<!--        <relativePath/> &lt;!&ndash; lookup parent from repository &ndash;&gt;-->
<!--    </parent>-->
    <groupId>com.macro.cloud</groupId>
    <artifactId>seata-order-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>seata-order-service</name>
    <description>Demo project for Spring Boot</description>

    <!--nacos版本2.0.3 + seata-server版本1.6.1-->
    <properties>
        <java.version>1.8</java.version>
        <spring-boot.version>2.7.0</spring-boot.version>
        <spring-cloud.version>2021.0.2</spring-cloud.version>
        <spring-cloud-alibaba.version>2021.0.1.0</spring-cloud-alibaba.version>
        <seata.version>1.6.1</seata.version>
        <mysql-connector-java.version>5.1.37</mysql-connector-java.version>
        <mybatis-spring-boot-starter.version>2.0.0</mybatis-spring-boot-starter.version>
        <druid-spring-boot-starter.version>1.1.10</druid-spring-boot-starter.version>
        <lombok.version>1.18.8</lombok.version>
    </properties>

    <dependencies>
        <!--nacos-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <!--SpringCloudAlibaba2021.0.1.0版本移除了对bootstrap.yml支持。
        如果想用bootstrap.yml，必须重新引入bootstrap的依赖-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>
        <!--添加loadbalancer依赖
            由于 Netflix Ribbon 进入停更维护阶段，因此 SpringCloud 2020.0.1 版本之后 删除了eureka中的ribbon，替代ribbon的是spring cloud自带的LoadBalancer，默认使用的是轮询的方式
            新版本的 Nacos discovery 都已经移除了 Ribbon ，此时我们需要引入 loadbalancer 代替，才能调用服务提供者提供的服务
        -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-loadbalancer</artifactId>
        </dependency>
        <!--分布式事务 seata- -->
        <!--移除alibaba-seata自带的seata-spring-boot-starter，因为自带的版本太低 -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-seata</artifactId>
            <!--<version>2021.0.1.0</version>-->
            <!--需要排除低版本的seata，手动引入1.6.1-->
            <exclusions>
                <exclusion>
                    <groupId>io.seata</groupId>
                    <artifactId>seata-spring-boot-starter</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--添加seata-spring-boot-starter依赖，版本需要与服务端版本相对应，此版本使用1.6.1 -->
        <dependency>
            <groupId>io.seata</groupId>
            <artifactId>seata-spring-boot-starter</artifactId>
            <!--<version>1.6.1</version>-->
        </dependency>
        <!--feign-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybatis-spring-boot-starter.version}</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid-spring-boot-starter.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

    </dependencies>

    <!-- 管理springboot和springcloud版本 -->
    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot 依赖配置 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- SpringCloud 微服务 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- SpringCloud Alibaba 微服务 -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- seata分布式事务, 统一管理seata版本-->
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-spring-boot-starter</artifactId>
                <version>${seata.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--配置测试开发生产环境-->
    <profiles>
        <profile>
            <!--开发环境-->
            <id>dev</id>
            <activation>
                <!--加了这个，默认激活的配置-->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--当前环境-->
                <env>dev</env>
                <nacosAddr>127.0.0.1:8848</nacosAddr>
                <!--Nacos配置中心命名空间,用于支持多环境.这里必须使用ID:b1741b1f-d032-4b74-aa5a-6b6beb0d1f15，不能使用名称,默认为空-->
                <nacosNamespace>dev</nacosNamespace>
            </properties>
        </profile>

        <!--测试环境-->
        <profile>
            <id>test</id>
            <properties>
                <!--当前环境-->
                <env>test</env>
                <nacosAddr>127.0.0.1:8848</nacosAddr>
                <!--Nacos配置中心命名空间,用于支持多环境.这里必须使用ID:b1741b1f-d032-4b74-aa5a-6b6beb0d1f15，不能使用名称,默认为空-->
                <nacosNamespace>test</nacosNamespace>
            </properties>
        </profile>

        <!--生产环境-->
        <profile>
            <id>prod</id>
            <properties>
                <!--当前环境-->
                <env>prod</env>
                <nacosAddr>127.0.0.1:8848</nacosAddr>
                <!--Nacos配置中心命名空间,用于支持多环境.这里必须使用ID:b1741b1f-d032-4b74-aa5a-6b6beb0d1f15，不能使用名称,默认为空-->
                <nacosNamespace>prod</nacosNamespace>
            </properties>
        </profile>
    </profiles>

    <build>
        <!--配合profiles中配置的环境文件使用，不配置项目启动报错-->
        <resources>
<!--            <resource>-->
<!--                <directory>src/main/resources</directory>-->
<!--                &lt;!&ndash; 处理文件时替换文件中的变量 &ndash;&gt;-->
<!--                <filtering>true</filtering>-->
<!--                <excludes>-->
<!--                    &lt;!&ndash; 打包时排除文件&ndash;&gt;-->
<!--                    <exclude>bootstrap.yml</exclude>-->
<!--                    <exclude>bootstrap-dev.yml</exclude>-->
<!--                    <exclude>bootstrap-test.yml</exclude>-->
<!--                    <exclude>bootstrap-prod.yml</exclude>-->
<!--                </excludes>-->
<!--            </resource>-->
            <resource>
                <directory>src/main/resources</directory>
                <!-- 处理文件时替换文件中的变量 -->
                <filtering>true</filtering>
                <!-- 打包时所包含的文件 -->
                <includes>
                    <include>**/*</include>
<!--                    <include>bootstrap.yml</include>-->
<!--                    <include>bootstrap-${env}.yml</include>-->
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
